  version: '3.5'
  services:
    mysql:
      image: mysql:5.7
      restart: always
      container_name: mysql
      hostname: mysql
      ports:
        - "3306:3306"
      volumes:
        - ./mysql/init/setup.sql:/docker-entrypoint-initdb.d/setup.sql
      environment:
        MYSQL_ROOT_PASSWORD: root
      command: --long_query_time=100 --slow_query_log='OFF' --character_set_server=utf8 --collation-server=utf8_bin --default-time-zone='UTC'
      networks:
        - appnet

    zookeeper:
      image: bitnami/zookeeper:latest
      container_name: zookeeper
      hostname: zookeeper
      ports:
        - "2181:2181"
      environment:
        - ALLOW_ANONYMOUS_LOGIN=yes
      networks:
        - appnet

    kafka:
      image: bitnami/kafka:latest
      container_name: kafka
      hostname: kafka
      ports:
        - "9092:9092"
      environment:
        - KAFKA_BROKER_ID=1
        - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
        - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
        - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
        - ALLOW_PLAINTEXT_LISTENER=yes
      networks:
        - appnet
      depends_on:
        - zookeeper

    kafka_ui:
      image: obsidiandynamics/kafdrop:latest
      restart: always
      container_name: kafka_ui
      hostname: kafka_ui
      ports:
        - "9000:9000"
      environment:
        - KAFKA_BROKERCONNECT=kafka:9092
        - SERVER_SERVLET_CONTEXTPATH=/
      networks:
        - appnet
      depends_on:
        - kafka

    consumer-service:
      container_name: consumer-service
      image: consumer:0.0.1-SNAPSHOT
      ports:
        - "8082:8092"
      environment:
        - spring.datasource.host= mysql
        - spring.datasource.name= cloudmoreDB
        - spring.kafka.consumer.bootstrap-servers=kafka:9092
      networks:
        - appnet
      depends_on:
        - mysql
        - kafka

    producer-service:
      container_name: producer-service
      image: producer:0.0.1-SNAPSHOT
      environment:
        - spring.kafka.producer.bootstrap-servers=kafka:9092
      ports:
        - "8081:8091"
      networks:
        - appnet
      depends_on:
        - kafka

  networks:
    appnet:
      driver: bridge